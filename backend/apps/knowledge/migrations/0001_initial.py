# Generated by Django 4.2.7 on 2025-07-16 07:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmbeddingConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="配置名称")),
                (
                    "embedding_type",
                    models.CharField(
                        choices=[("api", "API模式"), ("local", "本地模式")],
                        max_length=10,
                        verbose_name="嵌入类型",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(max_length=100, verbose_name="模型名称"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="API密钥"
                    ),
                ),
                (
                    "api_base_url",
                    models.URLField(blank=True, verbose_name="API基础URL"),
                ),
                (
                    "model_path",
                    models.CharField(
                        blank=True, max_length=1000, verbose_name="本地模型路径"
                    ),
                ),
                (
                    "dimension",
                    models.IntegerField(default=1536, verbose_name="向量维度"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="是否默认"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "嵌入模型配置",
                "verbose_name_plural": "嵌入模型配置",
            },
        ),
        migrations.CreateModel(
            name="KnowledgeBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="知识库名称")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="知识库描述"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "vector_store_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="向量库路径"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "知识库",
                "verbose_name_plural": "知识库",
            },
        ),
        migrations.CreateModel(
            name="ModelConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="配置名称")),
                (
                    "model_type",
                    models.CharField(
                        choices=[("api", "API模式"), ("local", "本地模式")],
                        max_length=10,
                        verbose_name="模型类型",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("anthropic", "Anthropic"),
                            ("google", "Google Gemini"),
                            ("zhipu", "智谱AI"),
                            ("qwen", "通义千问"),
                            ("local_llama", "Local Llama"),
                            ("local_chatglm", "Local ChatGLM"),
                            ("local_qwen", "Local Qwen"),
                        ],
                        max_length=20,
                        verbose_name="模型提供商",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(max_length=100, verbose_name="模型名称"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="API密钥"
                    ),
                ),
                (
                    "api_base_url",
                    models.URLField(blank=True, verbose_name="API基础URL"),
                ),
                (
                    "model_path",
                    models.CharField(
                        blank=True, max_length=1000, verbose_name="本地模型路径"
                    ),
                ),
                (
                    "max_tokens",
                    models.IntegerField(default=4096, verbose_name="最大Token数"),
                ),
                (
                    "temperature",
                    models.FloatField(default=0.7, verbose_name="温度参数"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="是否默认"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "模型配置",
                "verbose_name_plural": "模型配置",
            },
        ),
        migrations.CreateModel(
            name="QASession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="会话ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="会话标题"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "knowledge_base",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qa_sessions",
                        to="knowledge.knowledgebase",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "问答会话",
                "verbose_name_plural": "问答会话",
            },
        ),
        migrations.CreateModel(
            name="QARecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField(verbose_name="问题")),
                ("answer", models.TextField(verbose_name="回答")),
                (
                    "retrieved_chunks",
                    models.JSONField(default=list, verbose_name="检索到的文档块"),
                ),
                (
                    "model_used",
                    models.CharField(max_length=100, verbose_name="使用的模型"),
                ),
                ("response_time", models.FloatField(verbose_name="响应时间(秒)")),
                (
                    "tokens_used",
                    models.IntegerField(default=0, verbose_name="使用的Token数"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "feedback_score",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="反馈评分(1-5)"
                    ),
                ),
                (
                    "feedback_comment",
                    models.TextField(blank=True, verbose_name="反馈评论"),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qa_records",
                        to="knowledge.qasession",
                    ),
                ),
            ],
            options={
                "verbose_name": "问答记录",
                "verbose_name_plural": "问答记录",
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=500, verbose_name="文档标题")),
                (
                    "file_path",
                    models.CharField(max_length=1000, verbose_name="文件路径"),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("md", "Markdown"),
                            ("pdf", "PDF"),
                            ("txt", "Text"),
                            ("docx", "Word"),
                            ("html", "HTML"),
                        ],
                        max_length=10,
                        verbose_name="文件类型",
                    ),
                ),
                (
                    "file_size",
                    models.IntegerField(default=0, verbose_name="文件大小(bytes)"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待处理"),
                            ("processing", "处理中"),
                            ("completed", "已完成"),
                            ("failed", "失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="处理状态",
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="上传时间"),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="处理时间"
                    ),
                ),
                (
                    "chunk_count",
                    models.IntegerField(default=0, verbose_name="分块数量"),
                ),
                ("metadata", models.JSONField(default=dict, verbose_name="元数据")),
                (
                    "knowledge_base",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="knowledge.knowledgebase",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="上传者",
                    ),
                ),
            ],
            options={
                "verbose_name": "文档",
                "verbose_name_plural": "文档",
            },
        ),
        migrations.CreateModel(
            name="DocumentChunk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chunk_index", models.IntegerField(verbose_name="分块索引")),
                ("content", models.TextField(verbose_name="分块内容")),
                (
                    "embedding",
                    models.JSONField(blank=True, null=True, verbose_name="向量嵌入"),
                ),
                ("metadata", models.JSONField(default=dict, verbose_name="分块元数据")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chunks",
                        to="knowledge.document",
                    ),
                ),
            ],
            options={
                "verbose_name": "文档分块",
                "verbose_name_plural": "文档分块",
                "unique_together": {("document", "chunk_index")},
            },
        ),
    ]
